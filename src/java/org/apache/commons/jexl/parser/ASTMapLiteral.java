/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Generated By:JJTree: Do not edit this line. ASTMapLiteral.java */

package org.apache.commons.jexl.parser;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.jexl.JexlContext;

public class ASTMapLiteral extends SimpleNode {
    public ASTMapLiteral(int id) {
        super(id);
    }

    public ASTMapLiteral(Parser p, int id) {
        super(p, id);
    }

    /** Accept the visitor. * */
    public Object jjtAccept(ParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }

    public Object value(JexlContext context) throws Exception {
        int childCount = jjtGetNumChildren();
        Map map = new HashMap();

        for (int i = 0; i < childCount; i++) {
            Object[] entry = (Object[]) ((SimpleNode) jjtGetChild(i)).value(context);
            map.put(entry[0], entry[1]);
        }

        return map;
    }
}
